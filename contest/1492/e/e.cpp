/* Generated by powerful Codeforces Tool
 * Author: czhang
 * Time: 2021-03-03 21:16:22
**/

#include <bits/stdc++.h>
#include <vector>

using namespace std;
typedef long long ll;

bool check(ll * const mat, const int n, const int m, const int remains) {
    for (int i = 1; i < n; ++i) {
        vector<int> diffpos;
        for (int j = 0; j < m; ++j) {
            if (mat[j] != mat[i*m + j]) {
                diffpos.push_back(j);
            }
        }
        if (diffpos.size() > 4) {
            return false;
        } else if (diffpos.size() > 2) {
            if (remains < 1) {
                return false;
            }

            for (auto pos : diffpos) {
                ll tmp = mat[pos];
                mat[pos] = mat[i*m + pos];
                if (check(mat, n, m, remains - 1)) {
                    return true;
                }
                mat[pos] = tmp;
            }

            if (remains < 2) {
                return false;
            }

            for (auto x = diffpos.begin(); x != diffpos.end(); ++x) {
                for (auto y = x + 1; y != diffpos.end(); ++y) {
                    int tmpx = mat[*x];
                    int tmpy = mat[*y];
                    mat[*x] = mat[i*m + (*x)];
                    mat[*y] = mat[i*m + (*y)];

                    if (check(mat, n, m, remains - 2)) {
                        return true;
                    }

                    mat[*x] = tmpx;
                    mat[*y] = tmpy;
                }
            }

            return false;
        }
    }
    return true;
}

void solve() {
    int n, m;
    cin>>n>>m;
    ll *mat = new ll[n * m];
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin>>mat[i*m + j];
        }
    }
    if (check(mat, n, m, 2)) {
        cout<<"Yes"<<endl;
        for (int i = 0; i < m; ++i) {
            cout<<mat[i]<<' ';
        }
        cout<<endl;
    } else {
        cout<<"No"<<endl;
    }
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int tc = 1;
    // cin>>tc;
    for (int i = 0; i < tc; ++i) {
        solve();
    }
    return 0;
}
