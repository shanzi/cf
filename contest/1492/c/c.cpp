/* Generated by powerful Codeforces Tool
 * Author: czhang
 * Time: 2021-03-02 22:08:20
**/

#include <bits/stdc++.h>
#include <cstdint>

using namespace std;
typedef long long ll;

void solve() {
    int32_t m, n;
    cin>>n>>m;
    string s, t;
    cin>>s>>t;

    int32_t *p = new int32_t[m];
    int32_t *pp = new int32_t[m];

    int32_t l = 0;
    for (int32_t i = 0; i < m; ++i) {
        while (s.at(l) != t.at(i)) {
            l++;
        }
        p[i] = l++;
    }

    l = n - 1;
    for (int32_t i = m - 1; i >= 0; --i) {
        while(s.at(l) != t.at(i)) {
            l--;
        }
        pp[i] = l--;
    }

    int32_t res = 0;
    for (int32_t i = 0; i < m - 1; ++i) {
        res = max(res, pp[i+1] - p[i]);
    }
    cout<<res<<endl;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int tc = 1;
    // cin>>tc;
    for (int i = 0; i < tc; ++i) {
        solve();
    }
    return 0;
}
